services:
  image-processor:
    build:
      context: .
      dockerfile: docker/Dockerfile
    networks:
      - fashion_network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - "4000:8000"
    volumes:
      - .:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.image-processor.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.image-processor.entrypoints=websecure"
      - "traefik.http.routers.image-processor.service=image-processor"
      - "traefik.http.routers.image-processor.tls=true"
      - "traefik.http.services.image-processor.loadbalancer.server.port=8000"

  celery-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A app.celery_config.celery_app worker --loglevel=info --concurrency=${CELERY_WORKER_CONCURRENCY:-4}
    depends_on:
      - redis
    volumes:
      - .:/app
    networks:
      - fashion_network
    labels:
      - "traefik.enable=false"

  redis:
    image: 'redis:alpine'
    volumes:
      - 'image-processor-redis:/data'
    networks:
      - fashion_network
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s
    labels:
      - "traefik.enable=false"
  
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    volumes:
      - qdrant-storage:/qdrant/storage
    networks:
      - fashion_network
    labels:
      - "traefik.enable=false"

networks:
  fashion_network:
    external: true

volumes:
  image-processor-redis:
  qdrant-storage: